version: 1
policy:
  pullRequests: public
tasks:
  $let:
    project_name: 'signing'
    python_version: 'py37'

    head_rev:
      $if: 'tasks_for == "github-pull-request"'
      then: '${event.pull_request.head.sha}'
      else:
        $if: 'tasks_for == "github-push"'
        then: '${event.after}'
        else: '${event.release.tag_name}'

    repo_url:
      $if: 'tasks_for == "github-pull-request"'
      then: '${event.pull_request.head.repo.html_url}'
      else: '${event.repository.html_url}'

    owner: '${event.sender.login}@users.noreply.github.com'

    push_docker_image:
      $if: 'tasks_for == "github-pull-request"'
      then: '0'
      else:
        $if: 'tasks_for == "github-push" && event.ref in ["refs/heads/dev", "refs/heads/prod"]'
        then: '1'
        else: '0'

    docker_tag:
      $if: 'tasks_for == "github-pull-request"'
      then: 'pull-request'
      else:
        $if: 'tasks_for == "github-push" && event.ref[0:11] == "refs/heads/"'
        then: '${event.ref[11:]}'
        else: 'unknown'

  in:
    - taskId: '${as_slugid(python_version)}'
      provisionerId: 'aws-provisioner-v1'
      workerType: 'github-worker'
      created: {$fromNow: ''}
      deadline: {$fromNow: '4 hours'}
      payload:
        maxRunTime: 3600
        image: 'python:${python_version[2]}.${python_version[3]}'
        command:
          - sh
          - -lxce
          - >-
            cd /tmp &&
            wget ${repo_url}/archive/${head_rev}.tar.gz &&
            tar zxf ${head_rev}.tar.gz &&
            mv ${project_name}script-${head_rev} /src &&
            cd /src &&
            apt-get update &&
            apt-get install -y zipalign default-jdk-headless &&
            pip install tox &&
            tox -e ${python_version}
      metadata:
        name: 'tox ${python_version} (${docker_tag})'
        description: 'code linting & unit tests on ${python_version} (${docker_tag})'
        owner: '${owner}'
        source: '${repo_url}/raw/${head_rev}/.taskcluster.yml'

    - taskId: '${as_slugid("docker_build_and_push")}'
      dependencies:
        - '${as_slugid(python_version)}'
      provisionerId: 'aws-provisioner-v1'
      workerType: 'github-worker'
      created: {$fromNow: ''}
      deadline: {$fromNow: '24 hours'}
      payload:
        features:
          dind: true
          taskclusterProxy: true
        maxRunTime: 3600
        # we need to run really old docker version because taskcluster is using
        # really old version in their setup
        # image: docker:stable
        image: 'docker:1.6.2'
        env:
          DOCKERHUB_EMAIL: 'release+dockerhub+services@mozilla.com'
          DOCKERHUB_USER: 'mozillarelengservices'
          DOCKER_REPO: 'mozilla/releng-${project_name}script'
          DOCKER_TAG: '${docker_tag}'
          GIT_HEAD_REV: '${head_rev}'
          PROJECT_NAME: '${project_name}'
          PUSH_DOCKER_IMAGE: '${push_docker_image}'
          REPO_URL: '${repo_url}'
          SECRET_URL: 'http://taskcluster/secrets/v1/secret/project/releng/${project_name}script/deploy'
        command:
          - sh
          - -lxce
          - >-
            cd /tmp &&
            wget ${repo_url}/archive/${head_rev}.tar.gz &&
            tar zxf ${head_rev}.tar.gz &&
            mv ${project_name}script-${head_rev} /src &&
            cd /src &&
            ./docker.d/generate_version_json.sh &&
            ./docker.d/build_image.sh /tmp/image.tar &&
            ./docker.d/push_image.sh
        artifacts:
          public/image.tar:
            expires: {$fromNow: '8 weeks'}
            path: '/tmp/image.tar'
            type: 'file'
      scopes:
        $if: 'push_docker_image == "0"'
        then: []
        else:
          - 'secrets:get:project/releng/${project_name}script/deploy'
      metadata:
        $let:
          description:
            $if: 'push_docker_image == "0"'
            then: 'build docker image (${docker_tag})'
            else: 'build and push docker image (${docker_tag})'
        in:
          name: '${description}'
          description: '${description}'
          owner: '${owner}'
          source: '${repo_url}/raw/${head_rev}/.taskcluster.yml'
